/* Create a simple Factory Pattern for creating shapes (e.g., Circle, Square, Triangle). 
   Define an interface called Shape with a draw method, and create concrete classes Circle, Square, and Triangle that implement the Shape interface. 
   Implement a Shape Factory that has a method createShape which takes a string (e.g., "circle", "square", "triangle") as input and returns the corresponding shape object. 
   Write a program to demonstrate the usage of the factory to create different shapes and call their draw methods.
*/

package anudip;

public interface Shape {
	public void drawshape();
}

***********************************

package anudip;

public class Circle implements Shape{

	public void drawshape()
	{
		System.out.println("circle is drawn");
	}
}

*************************************

package anudip;

public class Square implements Shape {

	public void drawshape()
	{
		System.out.println("square is drawn");
	}
}

***************************************

package anudip;

public class Triangle implements Shape {

	public void drawshape()
	{
		System.out.println("Triangle is drawn");
	}
}

******************************************

package anudip;

public class ShapeFactory {
	
	public Shape createShape(String s)
	{
		Shape shape;
		if(s.equalsIgnoreCase("circle"))
			shape = (Shape) new Circle();
		else if(s.equalsIgnoreCase("square"))
			shape = (Shape) new Square();
		else if(s.equalsIgnoreCase("triangle"))
			shape = (Shape) new Triangle();
		else
			shape=null;
		
		return shape;
	}
}

**********************************************

package anudip;

import java.util.Scanner;

public class FactoryMethodPattern {

	public static void main(String[] args)
	{
		ShapeFactory sf = new ShapeFactory();
		
		int choice;
		Scanner obj = new Scanner(System.in);
		
		System.out.println("1. circle");
		System.out.println("2. square");
		System.out.println("3. trinagle");
		
		System.out.print("Enter your choice within to 1 to 3: ");
		choice=obj.nextInt();
		
		
		switch(choice)
		{
			case 1:
			{
				Shape s = sf.createShape("circle");
				s.drawshape();
				break;
			}
		
			case 2:
			{
				Shape s1 = sf.createShape("square");
				s1.drawshape();
				break;
			}

			case 3:
			{
				Shape s2 = sf.createShape("triangle");
				s2.drawshape();
				break;
			}

			default:
			{
				System.out.println("Invalid choice!!");
			}
		}	
	}
}

